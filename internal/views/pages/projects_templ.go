// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/melihkorkmaz/gtd/internal/views/layouts"
	"github.com/melihkorkmaz/gtd/internal/views/partials"
)

func ProjectsPage(projects []partials.ProjectInfo) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"card bg-base-100 shadow-xl\"><div class=\"card-body\"><div class=\"flex justify-between items-center mb-6\"><h2 class=\"card-title text-2xl\">Projects</h2><button class=\"btn btn-primary\" onclick=\"document.getElementById(&#39;new-project-modal&#39;).showModal()\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"></path></svg> New Project</button></div><!-- Projects filter options --><div class=\"flex flex-wrap gap-2 mb-4\"><div class=\"form-control\"><div class=\"input-group\"><span>Filter:</span> <select class=\"select select-bordered\" id=\"project-filter\"><option value=\"all\">All Projects</option> <option value=\"active\">Active</option> <option value=\"completed\">Completed</option> <option value=\"on-hold\">On Hold</option></select></div></div><div class=\"form-control\"><div class=\"input-group\"><span>Sort:</span> <select class=\"select select-bordered\" id=\"project-sort\"><option value=\"created-desc\">Newest First</option> <option value=\"created-asc\">Oldest First</option> <option value=\"progress-asc\">Least Progress</option> <option value=\"progress-desc\">Most Progress</option></select></div></div></div><!-- Projects List --><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\" id=\"projects-container\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(projects) > 0 {
				for _, project := range projects {
					templ_7745c5c3_Err = partials.ProjectCard(project).Render(ctx, templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"col-span-3 alert\"><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-info shrink-0 w-6 h-6\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg> <span>No projects found. Create your first project with the \"New Project\" button.</span></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div></div></div><!-- New Project Modal --> <dialog id=\"new-project-modal\" class=\"modal\"><div class=\"modal-box\"><h3 class=\"font-bold text-lg\">Create New Project</h3><p class=\"py-2\">Enter the details for your new project.</p><form method=\"POST\" action=\"/projects\" id=\"new-project-form\"><div class=\"form-control\"><label class=\"label\"><span class=\"label-text\">Project Name</span></label> <input type=\"text\" name=\"title\" placeholder=\"Enter project name...\" class=\"input input-bordered\" required></div><div class=\"form-control mt-2\"><label class=\"label\"><span class=\"label-text\">Description</span></label> <textarea name=\"description\" placeholder=\"Enter project description...\" class=\"textarea textarea-bordered\" rows=\"3\"></textarea></div><div class=\"form-control mt-2\"><label class=\"label\"><span class=\"label-text\">Due Date (Optional)</span></label> <input type=\"date\" name=\"due_date\" class=\"input input-bordered\"></div><div class=\"form-control mt-4\"><button type=\"submit\" class=\"btn btn-primary\">Create Project</button></div></form><div class=\"modal-action\"><form method=\"dialog\"><button class=\"btn\">Close</button></form></div></div></dialog><script>\n\t\t\t// Project filtering and sorting\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\tconst filterSelect = document.getElementById('project-filter');\n\t\t\t\tconst sortSelect = document.getElementById('project-sort');\n\t\t\t\t\n\t\t\t\tif (filterSelect && sortSelect) {\n\t\t\t\t\tfilterSelect.addEventListener('change', updateProjects);\n\t\t\t\t\tsortSelect.addEventListener('change', updateProjects);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction updateProjects() {\n\t\t\t\t\tconst filter = filterSelect.value;\n\t\t\t\t\tconst sort = sortSelect.value;\n\t\t\t\t\t\n\t\t\t\t\tfetch(`/api/projects?filter=${filter}&sort=${sort}`)\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\t// Update the projects container with the filtered/sorted projects\n\t\t\t\t\t\t\tconst container = document.getElementById('projects-container');\n\t\t\t\t\t\t\t// This would be replaced with a proper rendering of projects\n\t\t\t\t\t\t\tconsole.log(\"Projects updated:\", data);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.error('Error fetching projects:', error);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.Base("Projects - GTD App").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
